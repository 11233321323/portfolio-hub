{"ast":null,"code":"import CryptoJS from 'crypto-js';\nconst SALT = 'portfolio-hub-2024'; // 加盐增加安全性\n\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      username: '',\n      password: '',\n      maxAttempts: 5,\n      attemptCount: 0,\n      lastAttemptTime: 0\n    };\n  },\n  methods: {\n    handleLogin() {\n      // 检查登录频率\n      const now = Date.now();\n      if (now - this.lastAttemptTime < 2000) {\n        alert('请稍后再试');\n        return;\n      }\n      this.lastAttemptTime = now;\n\n      // 检查尝试次数\n      if (this.attemptCount >= this.maxAttempts) {\n        alert('登录尝试次数过多，请稍后再试');\n        return;\n      }\n\n      // 简单的密码加密\n      const hashedPassword = CryptoJS.SHA256(this.password + SALT).toString();\n      if (this.username === 'admin' && hashedPassword === CryptoJS.SHA256('admin123' + SALT).toString()) {\n        // 生成简单的会话信息\n        const session = {\n          username: this.username,\n          expires: Date.now() + 24 * 60 * 60 * 1000,\n          // 24小时后过期\n          token: CryptoJS.lib.WordArray.random(16).toString()\n        };\n\n        // 存储会话信息\n        localStorage.setItem('session', JSON.stringify(session));\n        this.attemptCount = 0;\n        this.$router.push('/admin');\n      } else {\n        this.attemptCount++;\n        alert('用户名或密码错误');\n      }\n    }\n  },\n  mounted() {\n    // 检查现有会话\n    const session = localStorage.getItem('session');\n    if (session) {\n      try {\n        const sessionData = JSON.parse(session);\n        if (sessionData.expires > Date.now()) {\n          this.$router.push('/admin');\n        } else {\n          localStorage.removeItem('session');\n        }\n      } catch {\n        localStorage.removeItem('session');\n      }\n    }\n  }\n};","map":{"version":3,"names":["CryptoJS","SALT","name","data","username","password","maxAttempts","attemptCount","lastAttemptTime","methods","handleLogin","now","Date","alert","hashedPassword","SHA256","toString","session","expires","token","lib","WordArray","random","localStorage","setItem","JSON","stringify","$router","push","mounted","getItem","sessionData","parse","removeItem"],"sources":["C:\\Users\\Administrator\\Desktop\\test\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-card\">\r\n      <h1>后台管理</h1>\r\n      <form @submit.prevent=\"handleLogin\" class=\"login-form\">\r\n        <div class=\"form-group\">\r\n          <label>用户名</label>\r\n          <input type=\"text\" v-model=\"username\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>密码</label>\r\n          <input type=\"password\" v-model=\"password\" required>\r\n        </div>\r\n        <button type=\"submit\">登 录</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst SALT = 'portfolio-hub-2024'; // 加盐增加安全性\r\n\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      maxAttempts: 5,\r\n      attemptCount: 0,\r\n      lastAttemptTime: 0\r\n    }\r\n  },\r\n  methods: {\r\n    handleLogin() {\r\n      // 检查登录频率\r\n      const now = Date.now();\r\n      if (now - this.lastAttemptTime < 2000) {\r\n        alert('请稍后再试');\r\n        return;\r\n      }\r\n      this.lastAttemptTime = now;\r\n\r\n      // 检查尝试次数\r\n      if (this.attemptCount >= this.maxAttempts) {\r\n        alert('登录尝试次数过多，请稍后再试');\r\n        return;\r\n      }\r\n\r\n      // 简单的密码加密\r\n      const hashedPassword = CryptoJS.SHA256(this.password + SALT).toString();\r\n      \r\n      if (this.username === 'admin' && \r\n          hashedPassword === CryptoJS.SHA256('admin123' + SALT).toString()) {\r\n        // 生成简单的会话信息\r\n        const session = {\r\n          username: this.username,\r\n          expires: Date.now() + 24 * 60 * 60 * 1000, // 24小时后过期\r\n          token: CryptoJS.lib.WordArray.random(16).toString()\r\n        };\r\n\r\n        // 存储会话信息\r\n        localStorage.setItem('session', JSON.stringify(session));\r\n        this.attemptCount = 0;\r\n        this.$router.push('/admin');\r\n      } else {\r\n        this.attemptCount++;\r\n        alert('用户名或密码错误');\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // 检查现有会话\r\n    const session = localStorage.getItem('session');\r\n    if (session) {\r\n      try {\r\n        const sessionData = JSON.parse(session);\r\n        if (sessionData.expires > Date.now()) {\r\n          this.$router.push('/admin');\r\n        } else {\r\n          localStorage.removeItem('session');\r\n        }\r\n      } catch {\r\n        localStorage.removeItem('session');\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.login-container {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: linear-gradient(135deg, #2c3e50, #3498db);\r\n  padding: 1rem;\r\n}\r\n\r\n.login-card {\r\n  background: white;\r\n  padding: 2rem;\r\n  border-radius: 12px;\r\n  box-shadow: 0 8px 30px rgba(0,0,0,0.1);\r\n  width: 100%;\r\n  max-width: 400px;\r\n  animation: slideUp 0.5s ease;\r\n\r\n  h1 {\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n    color: #2c3e50;\r\n    font-size: 1.8rem;\r\n  }\r\n}\r\n\r\n.login-form {\r\n  .form-group {\r\n    margin-bottom: 1.5rem;\r\n\r\n    label {\r\n      display: block;\r\n      margin-bottom: 0.5rem;\r\n      color: #2c3e50;\r\n    }\r\n\r\n    input {\r\n      width: 100%;\r\n      padding: 0.8rem;\r\n      border: 2px solid #eee;\r\n      border-radius: 8px;\r\n      font-size: 1rem;\r\n      transition: border-color 0.3s ease;\r\n\r\n      &:focus {\r\n        outline: none;\r\n        border-color: #3498db;\r\n      }\r\n    }\r\n  }\r\n\r\n  button {\r\n    width: 100%;\r\n    padding: 1rem;\r\n    background: #3498db;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 8px;\r\n    font-size: 1rem;\r\n    cursor: pointer;\r\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n\r\n    &:hover {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 5px 15px rgba(52, 152, 219, 0.3);\r\n    }\r\n  }\r\n}\r\n\r\n@keyframes slideUp {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n</style> "],"mappings":"AAoBA,OAAOA,QAAO,MAAO,WAAW;AAEhC,MAAMC,IAAG,GAAI,oBAAoB,EAAE;;AAEnC,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,CAAC;MACdC,YAAY,EAAE,CAAC;MACfC,eAAe,EAAE;IACnB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ;MACA,MAAMC,GAAE,GAAIC,IAAI,CAACD,GAAG,CAAC,CAAC;MACtB,IAAIA,GAAE,GAAI,IAAI,CAACH,eAAc,GAAI,IAAI,EAAE;QACrCK,KAAK,CAAC,OAAO,CAAC;QACd;MACF;MACA,IAAI,CAACL,eAAc,GAAIG,GAAG;;MAE1B;MACA,IAAI,IAAI,CAACJ,YAAW,IAAK,IAAI,CAACD,WAAW,EAAE;QACzCO,KAAK,CAAC,gBAAgB,CAAC;QACvB;MACF;;MAEA;MACA,MAAMC,cAAa,GAAId,QAAQ,CAACe,MAAM,CAAC,IAAI,CAACV,QAAO,GAAIJ,IAAI,CAAC,CAACe,QAAQ,CAAC,CAAC;MAEvE,IAAI,IAAI,CAACZ,QAAO,KAAM,OAAM,IACxBU,cAAa,KAAMd,QAAQ,CAACe,MAAM,CAAC,UAAS,GAAId,IAAI,CAAC,CAACe,QAAQ,CAAC,CAAC,EAAE;QACpE;QACA,MAAMC,OAAM,GAAI;UACdb,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBc,OAAO,EAAEN,IAAI,CAACD,GAAG,CAAC,IAAI,EAAC,GAAI,EAAC,GAAI,EAAC,GAAI,IAAI;UAAE;UAC3CQ,KAAK,EAAEnB,QAAQ,CAACoB,GAAG,CAACC,SAAS,CAACC,MAAM,CAAC,EAAE,CAAC,CAACN,QAAQ,CAAC;QACpD,CAAC;;QAED;QACAO,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACT,OAAO,CAAC,CAAC;QACxD,IAAI,CAACV,YAAW,GAAI,CAAC;QACrB,IAAI,CAACoB,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC7B,OAAO;QACL,IAAI,CAACrB,YAAY,EAAE;QACnBM,KAAK,CAAC,UAAU,CAAC;MACnB;IACF;EACF,CAAC;EACDgB,OAAOA,CAAA,EAAG;IACR;IACA,MAAMZ,OAAM,GAAIM,YAAY,CAACO,OAAO,CAAC,SAAS,CAAC;IAC/C,IAAIb,OAAO,EAAE;MACX,IAAI;QACF,MAAMc,WAAU,GAAIN,IAAI,CAACO,KAAK,CAACf,OAAO,CAAC;QACvC,IAAIc,WAAW,CAACb,OAAM,GAAIN,IAAI,CAACD,GAAG,CAAC,CAAC,EAAE;UACpC,IAAI,CAACgB,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC7B,OAAO;UACLL,YAAY,CAACU,UAAU,CAAC,SAAS,CAAC;QACpC;MACF,EAAE,MAAM;QACNV,YAAY,CAACU,UAAU,CAAC,SAAS,CAAC;MACpC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}