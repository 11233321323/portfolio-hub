{"ast":null,"code":"import { messages } from '../locales';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      name: 'Loading...',\n      title: 'Loading...',\n      avatar: 'https://via.placeholder.com/150',\n      about: 'Loading...',\n      skills: [],\n      projects: [],\n      social: {\n        github: '#',\n        email: '',\n        linkedin: '#'\n      },\n      currentLang: 'zh',\n      messages\n    };\n  },\n  methods: {\n    t(key) {\n      const keys = key.split('.');\n      let result = this.messages[this.currentLang];\n      for (const k of keys) {\n        result = result[k];\n      }\n      return result;\n    },\n    switchLang(lang) {\n      this.currentLang = lang;\n      // 根据语言切换内容\n      this.loadProfile(lang);\n    },\n    async loadProfile(lang) {\n      try {\n        const response = await fetch(`http://localhost:3000/api/profile?lang=${lang}`);\n        const data = await response.json();\n        Object.assign(this, data);\n      } catch (error) {\n        console.error('Error fetching profile:', error);\n      }\n    }\n  },\n  async created() {\n    await this.loadProfile(this.currentLang);\n  }\n};","map":{"version":3,"names":["messages","name","data","title","avatar","about","skills","projects","social","github","email","linkedin","currentLang","methods","t","key","keys","split","result","k","switchLang","lang","loadProfile","response","fetch","json","Object","assign","error","console","created"],"sources":["C:\\Users\\Administrator\\Desktop\\test\\src\\views\\Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <header class=\"hero\">\r\n      <div class=\"profile\">\r\n        <img :src=\"avatar\" :alt=\"name\" class=\"avatar\">\r\n        <h1>{{ name }}</h1>\r\n        <p class=\"title\">{{ title }}</p>\r\n      </div>\r\n      <div class=\"language-switch\">\r\n        <button \r\n          @click=\"switchLang('zh')\" \r\n          :class=\"{ active: currentLang === 'zh' }\"\r\n        >中文</button>\r\n        <button \r\n          @click=\"switchLang('en')\" \r\n          :class=\"{ active: currentLang === 'en' }\"\r\n        >English</button>\r\n      </div>\r\n      <div class=\"social-links\">\r\n        <a :href=\"social.github\" target=\"_blank\">\r\n          <i class=\"fab fa-github\"></i>\r\n        </a>\r\n        <a :href=\"'mailto:' + social.email\">\r\n          <i class=\"fas fa-envelope\"></i>\r\n        </a>\r\n        <a :href=\"social.linkedin\" target=\"_blank\">\r\n          <i class=\"fab fa-linkedin\"></i>\r\n        </a>\r\n      </div>\r\n    </header>\r\n\r\n    <section class=\"about\">\r\n      <h2>{{ t('about.title') }}</h2>\r\n      <p>{{ about }}</p>\r\n    </section>\r\n\r\n    <section class=\"skills\">\r\n      <h2>{{ t('skills.title') }}</h2>\r\n      <div class=\"skill-tags\">\r\n        <span v-for=\"skill in skills\" :key=\"skill\">{{ skill }}</span>\r\n      </div>\r\n    </section>\r\n\r\n    <section class=\"projects\">\r\n      <h2>{{ t('projects.title') }}</h2>\r\n      <div class=\"project-grid\">\r\n        <div v-for=\"project in projects\" :key=\"project.id\" class=\"project-card\">\r\n          <h3>{{ project.title }}</h3>\r\n          <p>{{ project.description }}</p>\r\n          <a :href=\"project.link\" class=\"project-link\">{{ t('projects.viewProject') }} →</a>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { messages } from '../locales'\r\n\r\nexport default {\r\n  name: 'Home',\r\n  data() {\r\n    return {\r\n      name: 'Loading...',\r\n      title: 'Loading...',\r\n      avatar: 'https://via.placeholder.com/150',\r\n      about: 'Loading...',\r\n      skills: [],\r\n      projects: [],\r\n      social: {\r\n        github: '#',\r\n        email: '',\r\n        linkedin: '#'\r\n      },\r\n      currentLang: 'zh',\r\n      messages\r\n    }\r\n  },\r\n  methods: {\r\n    t(key) {\r\n      const keys = key.split('.')\r\n      let result = this.messages[this.currentLang]\r\n      for (const k of keys) {\r\n        result = result[k]\r\n      }\r\n      return result\r\n    },\r\n    switchLang(lang) {\r\n      this.currentLang = lang\r\n      // 根据语言切换内容\r\n      this.loadProfile(lang)\r\n    },\r\n    async loadProfile(lang) {\r\n      try {\r\n        const response = await fetch(`http://localhost:3000/api/profile?lang=${lang}`);\r\n        const data = await response.json();\r\n        Object.assign(this, data);\r\n      } catch (error) {\r\n        console.error('Error fetching profile:', error);\r\n      }\r\n    }\r\n  },\r\n  async created() {\r\n    await this.loadProfile(this.currentLang);\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.home {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n}\r\n\r\n.hero {\r\n  text-align: center;\r\n  margin: 4rem 0;\r\n}\r\n\r\n.profile {\r\n  margin-bottom: 2rem;\r\n\r\n  .avatar {\r\n    width: 150px;\r\n    height: 150px;\r\n    border-radius: 50%;\r\n    margin-bottom: 1rem;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    transition: transform 0.3s ease;\r\n\r\n    &:hover {\r\n      transform: scale(1.05);\r\n    }\r\n  }\r\n\r\n  h1 {\r\n    font-size: 2.5rem;\r\n    margin: 1rem 0;\r\n    background: linear-gradient(120deg, #2c3e50, #3498db);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n  }\r\n\r\n  .title {\r\n    color: #666;\r\n    font-size: 1.2rem;\r\n  }\r\n}\r\n\r\n.social-links {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1.5rem;\r\n\r\n  a {\r\n    color: #2c3e50;\r\n    font-size: 1.5rem;\r\n    transition: color 0.3s ease;\r\n\r\n    &:hover {\r\n      color: #3498db;\r\n    }\r\n  }\r\n}\r\n\r\nsection {\r\n  margin: 4rem 0;\r\n  padding: 2rem;\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n  transition: transform 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: translateY(-5px);\r\n  }\r\n\r\n  h2 {\r\n    color: #2c3e50;\r\n    margin-bottom: 1.5rem;\r\n    position: relative;\r\n    \r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      bottom: -0.5rem;\r\n      left: 0;\r\n      width: 50px;\r\n      height: 3px;\r\n      background: #3498db;\r\n      border-radius: 3px;\r\n    }\r\n  }\r\n}\r\n\r\n.skill-tags {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n\r\n  span {\r\n    background: #f8f9fa;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 20px;\r\n    font-size: 0.9rem;\r\n    color: #2c3e50;\r\n    transition: all 0.3s ease;\r\n\r\n    &:hover {\r\n      background: #3498db;\r\n      color: white;\r\n      transform: translateY(-2px);\r\n    }\r\n  }\r\n}\r\n\r\n.project-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 2rem;\r\n}\r\n\r\n.project-card {\r\n  padding: 1.5rem;\r\n  background: #f8f9fa;\r\n  border-radius: 8px;\r\n  transition: transform 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: translateY(-5px);\r\n  }\r\n\r\n  h3 {\r\n    color: #2c3e50;\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  p {\r\n    color: #666;\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  .project-link {\r\n    color: #3498db;\r\n    text-decoration: none;\r\n    font-weight: 500;\r\n    \r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .home {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .profile h1 {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  section {\r\n    padding: 1.5rem;\r\n  }\r\n}\r\n\r\n.language-switch {\r\n  margin: 1rem 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 0.5rem;\r\n\r\n  button {\r\n    padding: 0.5rem 1rem;\r\n    border: 2px solid #3498db;\r\n    background: transparent;\r\n    color: #3498db;\r\n    border-radius: 20px;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    font-size: 0.9rem;\r\n\r\n    &:hover {\r\n      background: #3498db;\r\n      color: white;\r\n    }\r\n\r\n    &.active {\r\n      background: #3498db;\r\n      color: white;\r\n    }\r\n  }\r\n}\r\n</style> "],"mappings":"AAyDA,SAASA,QAAO,QAAS,YAAW;AAEpC,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLD,IAAI,EAAE,YAAY;MAClBE,KAAK,EAAE,YAAY;MACnBC,MAAM,EAAE,iCAAiC;MACzCC,KAAK,EAAE,YAAY;MACnBC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;QACNC,MAAM,EAAE,GAAG;QACXC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ,CAAC;MACDC,WAAW,EAAE,IAAI;MACjBZ;IACF;EACF,CAAC;EACDa,OAAO,EAAE;IACPC,CAACA,CAACC,GAAG,EAAE;MACL,MAAMC,IAAG,GAAID,GAAG,CAACE,KAAK,CAAC,GAAG;MAC1B,IAAIC,MAAK,GAAI,IAAI,CAAClB,QAAQ,CAAC,IAAI,CAACY,WAAW;MAC3C,KAAK,MAAMO,CAAA,IAAKH,IAAI,EAAE;QACpBE,MAAK,GAAIA,MAAM,CAACC,CAAC;MACnB;MACA,OAAOD,MAAK;IACd,CAAC;IACDE,UAAUA,CAACC,IAAI,EAAE;MACf,IAAI,CAACT,WAAU,GAAIS,IAAG;MACtB;MACA,IAAI,CAACC,WAAW,CAACD,IAAI;IACvB,CAAC;IACD,MAAMC,WAAWA,CAACD,IAAI,EAAE;MACtB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMC,KAAK,CAAC,0CAA0CH,IAAI,EAAE,CAAC;QAC9E,MAAMnB,IAAG,GAAI,MAAMqB,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClCC,MAAM,CAACC,MAAM,CAAC,IAAI,EAAEzB,IAAI,CAAC;MAC3B,EAAE,OAAO0B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF;EACF,CAAC;EACD,MAAME,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACR,WAAW,CAAC,IAAI,CAACV,WAAW,CAAC;EAC1C;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}